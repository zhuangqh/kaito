"use strict";(self.webpackChunkkaito_website=self.webpackChunkkaito_website||[]).push([[840],{3143:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>i});var t=s(4848),a=s(8453);const r={title:"AWS Deployment"},l="Installation using AWS EKS cluster",o={id:"aws",title:"AWS Deployment",description:"Before you begin, ensure you have the following tools installed:",source:"@site/docs/aws.md",sourceDirName:".",slug:"/aws",permalink:"/kaito/docs/aws",draft:!1,unlisted:!1,editUrl:"https://github.com/kaito-project/kaito/tree/main/website/docs/aws.md",tags:[],version:"current",frontMatter:{title:"AWS Deployment"},sidebar:"sidebar",previous:{title:"Custom Model Integration",permalink:"/kaito/docs/custom-model"},next:{title:"Monitoring",permalink:"/kaito/docs/monitoring"}},c={},i=[{value:"Create EKS Cluster",id:"create-eks-cluster",level:2},{value:"Install Karpenter Controller",id:"install-karpenter-controller",level:2},{value:"Install Workspace Controller",id:"install-workspace-controller",level:2},{value:"Verify installation",id:"verify-installation",level:2},{value:"Create a Workspace and start an inference service",id:"create-a-workspace-and-start-an-inference-service",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"installation-using-aws-eks-cluster",children:"Installation using AWS EKS cluster"}),"\n",(0,t.jsx)(n.p,{children:"Before you begin, ensure you have the following tools installed:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html",children:"AWS CLI"})," to provision AWS resources"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://eksctl.io/installation/",children:"Eksctl"})," (>= v0.191.0) to create and manage clusters on EKS"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://helm.sh",children:"Helm"})," to install this operator"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/tools/",children:"kubectl"})," to view Kubernetes resources"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"create-eks-cluster",children:"Create EKS Cluster"}),"\n",(0,t.jsx)(n.p,{children:"If you do not already have an EKS cluster, run the following to create one:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'cd ../.. #go back to main directory to use MAKE commands\n\nexport AWS_CLUSTER_NAME=kaito-aws\nexport AWS_REGION=us-west-2\nexport AWS_PARTITION=aws\nexport AWS_K8S_VERSION=1.30\nexport KARPENTER_NAMESPACE=kube-system\nexport AWS_ACCOUNT_ID="$(aws sts get-caller-identity --query Account --output text)"\n\nmake deploy-aws-cloudformation\nmake create-eks-cluster\n'})}),"\n",(0,t.jsx)(n.p,{children:"If you already have an EKS cluster, connect to it using"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION\n"})}),"\n",(0,t.jsx)(n.h2,{id:"install-karpenter-controller",children:"Install Karpenter Controller"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"make aws-karpenter-helm\n"})}),"\n",(0,t.jsx)(n.h2,{id:"install-workspace-controller",children:"Install Workspace Controller"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"make aws-patch-install-helm\n"})}),"\n",(0,t.jsx)(n.h2,{id:"verify-installation",children:"Verify installation"}),"\n",(0,t.jsx)(n.p,{children:"You can run the following commands to verify the installation of the controllers were successful."}),"\n",(0,t.jsx)(n.p,{children:"Check status of the Helm chart installations."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm list -n default\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Check status of ",(0,t.jsx)(n.code,{children:"workspace"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl describe deploy kaito-workspace -n kaito-workspace\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Check status of ",(0,t.jsx)(n.code,{children:"karpenter"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl describe deploy karpenter -n $KARPENTER_NAMESPACE\n"})}),"\n",(0,t.jsx)(n.h2,{id:"create-a-workspace-and-start-an-inference-service",children:"Create a Workspace and start an inference service"}),"\n",(0,t.jsx)(n.p,{children:"Once the KAITO and Karpenter controllers are installed, you can follow these commands to start a falcon-7b inference service."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'$ export kaito_workspace_aws="../../examples/inference/kaito_workspace_falcon_7b_aws.yaml"\n$ cat $kaito_workspace_aws\napiVersion: kaito.sh/v1beta1\nkind: Workspace\nmetadata:\n  name: aws-workspace\nresource:\n  instanceType: "g5.4xlarge"\n  labelSelector:\n    matchLabels:\n      apps: falcon-7b\ninference:\n  preset:\n    name: "falcon-7b"\n\n$ kubectl apply -f $kaito_workspace_aws\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The workspace status can be tracked by running the following command. When the WORKSPACEREADY column becomes ",(0,t.jsx)(n.code,{children:"True"}),", the model has been deployed successfully."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"$ kubectl get workspace workspace-falcon-7b\nNAME                  INSTANCE            RESOURCEREADY   INFERENCEREADY    JOBSTARTED  WORKSPACESUCCEEDED  AGE\naws-workspace         g5.4xlarge          True            True              True        True                10m\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Next, one can find the inference service's cluster ip and use a temporal ",(0,t.jsx)(n.code,{children:"curl"})," pod to test the service endpoint in the cluster."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'$ kubectl get svc aws-workspace\nNAME                  TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)            AGE\naws-workspace         ClusterIP   <CLUSTERIP>  <none>        80/TCP,29500/TCP   10m\n\nexport CLUSTERIP=$(kubectl get svc aws-workspace -o jsonpath="{.spec.clusterIPs[0]}")\n$ kubectl run -it --rm --restart=Never curl --image=curlimages/curl -- curl -X POST http://$CLUSTERIP/chat -H "accept: application/json" -H "Content-Type: application/json" -d "{\\"prompt\\":\\"YOUR QUESTION HERE\\"}"\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var t=s(6540);const a={},r=t.createContext(a);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);