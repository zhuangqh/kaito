"use strict";(self.webpackChunkkaito_website=self.webpackChunkkaito_website||[]).push([[803],{3668:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var t=s(4848),r=s(8453);const i={title:"Installation"},o=void 0,a={id:"installation",title:"Installation",description:"The following guidance assumes Azure Kubernetes Service(AKS) is used to host the Kubernetes cluster. If you want to use Elastic Kubernetes Service (EKS) instead, please follow the installation guide here.",source:"@site/docs/installation.md",sourceDirName:".",slug:"/installation",permalink:"/kaito/docs/installation",draft:!1,unlisted:!1,editUrl:"https://github.com/kaito-project/kaito/tree/main/website/docs/installation.md",tags:[],version:"current",frontMatter:{title:"Installation"},sidebar:"sidebar",previous:{title:"Introduction",permalink:"/kaito/docs/"},next:{title:"Quick Start",permalink:"/kaito/docs/quick-start"}},l={},c=[{value:"Install workspace controller",id:"install-workspace-controller",level:2},{value:"Install gpu-provisioner controller",id:"install-gpu-provisioner-controller",level:2},{value:"Enable Workload Identity and OIDC Issuer features",id:"enable-workload-identity-and-oidc-issuer-features",level:4},{value:"Create an identity and assign permissions",id:"create-an-identity-and-assign-permissions",level:4},{value:"Install helm charts",id:"install-helm-charts",level:4},{value:"Create the federated credential",id:"create-the-federated-credential",level:4},{value:"Verify installation",id:"verify-installation",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Clean up",id:"clean-up",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["The following guidance assumes ",(0,t.jsx)(n.strong,{children:"Azure Kubernetes Service(AKS)"})," is used to host the Kubernetes cluster. If you want to use Elastic Kubernetes Service (EKS) instead, please follow the installation guide ",(0,t.jsx)(n.a,{href:"https://github.com/kaito-project/kaito/blob/main/docs/aws/aws_installation.md",children:"here"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Before you begin, ensure you have the following tools installed:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://learn.microsoft.com/cli/azure/install-azure-cli",children:"Azure CLI"})," to provision Azure resources"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://helm.sh",children:"Helm"})," to install this operator"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/tools/",children:"kubectl"})," to view Kubernetes resources"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://git-scm.com/downloads",children:"git"})," to clone this repo locally"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/mikefarah/yq",children:"yq"})," to process yaml files"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://jqlang.github.io/jq/download",children:"jq"})," to process JSON files"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Important Note"}),":\nEnsure you use a release branch of the repository for a stable version of the installation."]}),"\n",(0,t.jsx)(n.p,{children:"If you do not already have an AKS cluster, run the following Azure CLI commands to create one:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'export RESOURCE_GROUP="myResourceGroup"\nexport MY_CLUSTER="myCluster"\nexport LOCATION="eastus"\naz group create --name $RESOURCE_GROUP --location $LOCATION\naz aks create --resource-group $RESOURCE_GROUP --name $MY_CLUSTER --enable-oidc-issuer --enable-workload-identity --enable-managed-identity --generate-ssh-keys\n'})}),"\n",(0,t.jsx)(n.p,{children:"Connect to the AKS cluster."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"az aks get-credentials --resource-group $RESOURCE_GROUP --name $MY_CLUSTER\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If you do not have ",(0,t.jsx)(n.code,{children:"kubectl"})," installed locally, you can install using the following Azure CLI command."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"az aks install-cli\n"})}),"\n",(0,t.jsx)(n.h2,{id:"install-workspace-controller",children:"Install workspace controller"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Be sure you've cloned this repo and connected to your AKS cluster before attempting to install the Helm charts."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Install the Workspace controller."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export KAITO_WORKSPACE_VERSION=0.4.6\n\nhelm install kaito-workspace  --set clusterName=$MY_CLUSTER --wait \\\nhttps://github.com/kaito-project/kaito/raw/gh-pages/charts/kaito/workspace-$KAITO_WORKSPACE_VERSION.tgz --namespace kaito-workspace --create-namespace\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Note that if you have installed another node provisioning controller that supports Karpenter-core APIs, the following steps for installing ",(0,t.jsx)(n.code,{children:"gpu-provisioner"})," can be skipped."]}),"\n",(0,t.jsx)(n.h2,{id:"install-gpu-provisioner-controller",children:"Install gpu-provisioner controller"}),"\n",(0,t.jsx)(n.h4,{id:"enable-workload-identity-and-oidc-issuer-features",children:"Enable Workload Identity and OIDC Issuer features"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.em,{children:"gpu-provisioner"})," controller requires the ",(0,t.jsx)(n.a,{href:"https://learn.microsoft.com/azure/aks/workload-identity-overview?tabs=dotnet",children:"workload identity"})," feature to acquire the access token to the AKS cluster."]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Run the following commands only if your AKS cluster does not already have the Workload Identity and OIDC issuer features enabled."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'export RESOURCE_GROUP="myResourceGroup"\nexport MY_CLUSTER="myCluster"\naz aks update -g $RESOURCE_GROUP -n $MY_CLUSTER --enable-oidc-issuer --enable-workload-identity --enable-managed-identity\n'})}),"\n",(0,t.jsx)(n.h4,{id:"create-an-identity-and-assign-permissions",children:"Create an identity and assign permissions"}),"\n",(0,t.jsxs)(n.p,{children:["The identity ",(0,t.jsx)(n.code,{children:"kaitoprovisioner"})," is created for the ",(0,t.jsx)(n.em,{children:"gpu-provisioner"})," controller. It is assigned Contributor role for the managed cluster resource to allow changing ",(0,t.jsx)(n.code,{children:"$MY_CLUSTER"})," (e.g., provisioning new nodes in it)."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'export SUBSCRIPTION=$(az account show --query id -o tsv)\nexport IDENTITY_NAME="kaitoprovisioner"\naz identity create --name $IDENTITY_NAME -g $RESOURCE_GROUP\nexport IDENTITY_PRINCIPAL_ID=$(az identity show --name $IDENTITY_NAME -g $RESOURCE_GROUP --subscription $SUBSCRIPTION --query \'principalId\' -o tsv)\naz role assignment create --assignee $IDENTITY_PRINCIPAL_ID --scope /subscriptions/$SUBSCRIPTION/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.ContainerService/managedClusters/$MY_CLUSTER  --role "Contributor"\n'})}),"\n",(0,t.jsx)(n.h4,{id:"install-helm-charts",children:"Install helm charts"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Important Note"}),":\nFor kaito 0.4.2 and above, please use gpu-provisioner 0.3.2 or higher. For versions below kaito 0.4.2, please use gpu-provisioner 0.2.1."]}),"\n",(0,t.jsx)(n.p,{children:"Install the Node provisioner controller."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# get additional values for helm chart install\nexport GPU_PROVISIONER_VERSION=0.3.5\n\ncurl -sO https://raw.githubusercontent.com/Azure/gpu-provisioner/main/hack/deploy/configure-helm-values.sh\nchmod +x ./configure-helm-values.sh && ./configure-helm-values.sh $MY_CLUSTER $RESOURCE_GROUP $IDENTITY_NAME\n\nhelm install gpu-provisioner --values gpu-provisioner-values.yaml --set settings.azure.clusterName=$MY_CLUSTER --wait \\\nhttps://github.com/Azure/gpu-provisioner/raw/gh-pages/charts/gpu-provisioner-$GPU_PROVISIONER_VERSION.tgz --namespace gpu-provisioner --create-namespace\n"})}),"\n",(0,t.jsx)(n.h4,{id:"create-the-federated-credential",children:"Create the federated credential"}),"\n",(0,t.jsxs)(n.p,{children:["The federated identity credential between the managed identity ",(0,t.jsx)(n.code,{children:"kaitoprovisioner"})," and the service account used by the ",(0,t.jsx)(n.em,{children:"gpu-provisioner"})," controller is created."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'export AKS_OIDC_ISSUER=$(az aks show -n $MY_CLUSTER -g $RESOURCE_GROUP --subscription $SUBSCRIPTION --query "oidcIssuerProfile.issuerUrl" -o tsv)\naz identity federated-credential create --name kaito-federatedcredential --identity-name $IDENTITY_NAME -g $RESOURCE_GROUP --issuer $AKS_OIDC_ISSUER --subject system:serviceaccount:"gpu-provisioner:gpu-provisioner" --audience api://AzureADTokenExchange --subscription $SUBSCRIPTION\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Then the ",(0,t.jsx)(n.em,{children:"gpu-provisioner"})," can access the managed cluster using a trust token with the same permissions of the ",(0,t.jsx)(n.code,{children:"kaitoprovisioner"})," identity.\nNote that before finishing this step, the ",(0,t.jsx)(n.em,{children:"gpu-provisioner"})," controller pod will constantly fail with the following message in the log:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"panic: Configure azure client fails. Please ensure federatedcredential has been created for identity XXXX.\n"})}),"\n",(0,t.jsx)(n.p,{children:"The pod will reach running state once the federated credential is created."}),"\n",(0,t.jsx)(n.h2,{id:"verify-installation",children:"Verify installation"}),"\n",(0,t.jsx)(n.p,{children:"You can run the following commands to verify the installation of the controllers were successful."}),"\n",(0,t.jsx)(n.p,{children:"Check status of the Helm chart installations."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm list -n kaito-workspace\nhelm list -n gpu-provisioner\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Check status of the ",(0,t.jsx)(n.code,{children:"workspace"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl describe deploy kaito-workspace -n kaito-workspace\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Check status of the ",(0,t.jsx)(n.code,{children:"gpu-provisioner"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl describe deploy gpu-provisioner -n gpu-provisioner\n"})}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsxs)(n.p,{children:["If you see that the ",(0,t.jsx)(n.code,{children:"gpu-provisioner"})," deployment is not running after some time, it's possible that some values incorrect in your ",(0,t.jsx)(n.code,{children:"values.ovveride.yaml"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Run the following command to check ",(0,t.jsx)(n.code,{children:"gpu-provisioner"})," pod logs for additional details."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl logs --selector=app.kubernetes.io\\/name=gpu-provisioner -n gpu-provisioner\n"})}),"\n",(0,t.jsx)(n.h2,{id:"clean-up",children:"Clean up"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm uninstall gpu-provisioner -n gpu-provisioner\nhelm uninstall kaito-workspace -n kaito-workspace\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(6540);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);