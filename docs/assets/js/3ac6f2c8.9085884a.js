"use strict";(self.webpackChunkkaito_website=self.webpackChunkkaito_website||[]).push([[6961],{4805:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"proposals","title":"Proposals","description":"This section contains proposals for adding new models to KAITO. Each proposal describes the process of evaluating and integrating new OSS models into the KAITO ecosystem.","source":"@site/versioned_docs/version-v0.6.x/proposals.md","sourceDirName":".","slug":"/proposals","permalink":"/kaito/docs/proposals","draft":false,"unlisted":false,"editUrl":"https://github.com/kaito-project/kaito/tree/main/website/versioned_docs/version-v0.6.x/proposals.md","tags":[],"version":"v0.6.x","frontMatter":{"title":"Proposals"},"sidebar":"sidebar","previous":{"title":"Preset onboarding","permalink":"/kaito/docs/preset-onboarding"}}');var i=s(4848),n=s(8453);const r={title:"Proposals"},l=void 0,a={},d=[{value:"Proposal Template",id:"proposal-template",level:2},{value:"Current Proposals",id:"current-proposals",level:2},{value:"Provisional Status",id:"provisional-status",level:3},{value:"Integrated Status",id:"integrated-status",level:3},{value:"Proposal Process",id:"proposal-process",level:2},{value:"Step 1: Create a Proposal",id:"step-1-create-a-proposal",level:3},{value:"Step 2: Model Validation",id:"step-2-model-validation",level:3},{value:"Step 3: Image Publishing",id:"step-3-image-publishing",level:3},{value:"Step 4: Integration",id:"step-4-integration",level:3},{value:"Step 5: Testing",id:"step-5-testing",level:3},{value:"Contributing a Proposal",id:"contributing-a-proposal",level:2}];function p(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"This section contains proposals for adding new models to KAITO. Each proposal describes the process of evaluating and integrating new OSS models into the KAITO ecosystem."}),"\n",(0,i.jsx)(t.h2,{id:"proposal-template",children:"Proposal Template"}),"\n",(0,i.jsxs)(t.p,{children:["Before creating a new model proposal, please use the following template: ",(0,i.jsx)(t.a,{href:"https://github.com/kaito-project/kaito/blob/main/docs/proposals/YYYYMMDD-model-template.md",children:"Model Proposal Template"})]}),"\n",(0,i.jsx)(t.h2,{id:"current-proposals",children:"Current Proposals"}),"\n",(0,i.jsx)(t.p,{children:"Below are the current model proposals in various stages of integration:"}),"\n",(0,i.jsx)(t.h3,{id:"provisional-status",children:"Provisional Status"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/kaito-project/kaito/blob/main/docs/proposals/20250529-llama-3.3-70b-instruct.md",children:"Llama 3.3 70B Instruct"})," - Meta's multilingual instruction-tuned 70B model"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/kaito-project/kaito/blob/main/docs/proposals/20250103-qwen2.5-coder.md",children:"Qwen2.5 Coder"})," - Qwen2.5 series for code generation"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/kaito-project/kaito/blob/main/docs/proposals/20241212-phi4-instruct.md",children:"Phi-4 Instruct"})," - Microsoft's latest Phi-4 instruction-tuned model"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/kaito-project/kaito/blob/main/docs/proposals/20250325-distributed-inference.md",children:"Distributed Inference"})," - Support for distributed inference across multiple GPUs"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/kaito-project/kaito/blob/main/docs/proposals/20250609-model-as-oci-artifacts.md",children:"Model as OCI Artifacts"})," - Packaging models as OCI artifacts"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"integrated-status",children:"Integrated Status"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/kaito-project/kaito/blob/main/docs/proposals/20240205-mistral-instruct.md",children:"Mistral Instruct"})," - Mistral AI's instruction-tuned model"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/kaito-project/kaito/blob/main/docs/proposals/20240205-mistral.md",children:"Mistral"})," - Base Mistral model"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/kaito-project/kaito/blob/main/docs/proposals/20240206-phi-2.md",children:"Phi-2"})," - Microsoft's Phi-2 small language model"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/kaito-project/kaito/blob/main/docs/proposals/20240527-phi3-instruct.md",children:"Phi-3 Instruct"})," - Microsoft's Phi-3 instruction-tuned model"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"proposal-process",children:"Proposal Process"}),"\n",(0,i.jsxs)(t.p,{children:["For detailed information about the model onboarding process, see the ",(0,i.jsx)(t.a,{href:"/kaito/docs/preset-onboarding",children:"Model Onboarding Guide"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"step-1-create-a-proposal",children:"Step 1: Create a Proposal"}),"\n",(0,i.jsx)(t.p,{children:"Use the model proposal template to describe the target OSS model, including licensing, usage statistics, and technical requirements."}),"\n",(0,i.jsx)(t.h3,{id:"step-2-model-validation",children:"Step 2: Model Validation"}),"\n",(0,i.jsx)(t.p,{children:"KAITO maintainers validate and test the proposed model using the specified runtime."}),"\n",(0,i.jsx)(t.h3,{id:"step-3-image-publishing",children:"Step 3: Image Publishing"}),"\n",(0,i.jsx)(t.p,{children:"If licensing allows, model images are published to Microsoft Container Registry (MCR)."}),"\n",(0,i.jsx)(t.h3,{id:"step-4-integration",children:"Step 4: Integration"}),"\n",(0,i.jsx)(t.p,{children:"Implement preset configurations and inference interfaces for the model."}),"\n",(0,i.jsx)(t.h3,{id:"step-5-testing",children:"Step 5: Testing"}),"\n",(0,i.jsx)(t.p,{children:"Add comprehensive E2E tests to ensure the model works correctly with KAITO."}),"\n",(0,i.jsx)(t.h2,{id:"contributing-a-proposal",children:"Contributing a Proposal"}),"\n",(0,i.jsx)(t.p,{children:"To contribute a new model proposal:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Fork the KAITO repository"}),"\n",(0,i.jsxs)(t.li,{children:["Copy the ",(0,i.jsx)(t.a,{href:"https://github.com/kaito-project/kaito/blob/main/docs/proposals/YYYYMMDD-model-template.md",children:"model template"})," to ",(0,i.jsx)(t.code,{children:"docs/proposals/YYYYMMDD-<model-name>.md"})]}),"\n",(0,i.jsx)(t.li,{children:"Fill out all required sections"}),"\n",(0,i.jsx)(t.li,{children:"Submit a pull request for review"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"The proposal status will be updated as it progresses through the integration pipeline."})]})}function c(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>l});var o=s(6540);const i={},n=o.createContext(i);function r(e){const t=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(n.Provider,{value:t},e.children)}}}]);